
sudo mysql 
create database todoList;
grant all privileges on todoList * to harryxenon@localhost identified by "loom55";


'use strict'

require('dotenv').config();
const express = require('express');
const app = express();
const PORT = 8080;
const mysql = require('mysql');
app.use(express.json());
const path = require('path');



app.use('/static', express.static('static'));

app.listen(PORT, () => {
console.log(`Server is listening at ${PORT}`)
});

const con = mysql.createConnection({
host: process.env.DB_host,
user: process.env.DB_user,
password: process.env.DB_password,
database: process.env.DB_database
});

let SQL = `SELECT ...`;

IF USING API

api end point 
app.get('/booklistAPI', (req, res)=> {
con.query(SQL, (err,rows) => {
if(err) tow err;

res.send(rows);
console.log(rows);
});
});

The rendering html-page
app.get('/index',function(req,res){
res.sendFile(path.join(__dirname+'/static/index.html'));
});

IF USING EJS-TEMPLATES
npm install ejs

app.set('view engine', 'ejs');
app.get('/booklist', (req,res) => {
con.query(SQL, (err, rows) => {
if (err) {
console.error(err);
res.status(500).send();
return;
}
res.render('index', {data: rows});
console.log(rows);

});
});


AJAX-CALLS

let parent = document.getElementsByTagName('body');
parent = parent[0];

let createContent = (data) => {
let htmlcontent = '';
for(let i = 0; i <10; i++){
htmlcontent += `<img src=${data[i].images["fixed_height_still"].url}></img>`;
}
parent.insertAdjacentHTML('beforeend', htmlcontent);
}
let data = {};
let gifs = [];

let http = new XMLHttpRequest();
http.open("GET",
'https://api.giphy.com/v1/gifs/trending?api_key=1aMcoMiCD9hR2fNUC0rwRGKRjpuN2pxh&q=fail&limit=16',
true );
http.send();
http.onload = () => {
data = JSON.parse(http.response).data;
console.log('data on readystate', data);
createContent(data);

}

con.query(SQL, (err, rows) => {
    console.log(rows);
    if (err) {
      console.error(err);
      res.status(500).send();
      return;
    }
    SQL = `SELECT * FROM redditPosts WHERE post_id = ${rows.insertId}`
    con.query(SQL, (err, rows) => {
      if (err) {
        console.error(err);
        res.status(500).send();
        return;
      };
      res.send(rows);
    })
  });
});